/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dashboards;



import databaseConnectivity.MyPrisonConnection;
import datechooser.model.DaysGrid;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.sql.Types;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javafx.scene.control.RadioButton;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import loginpage.Convicted_panel;

import java.util.Date;
import javax.swing.JOptionPane;
import loginpage.Under_trial_panel;

/**
 *
 * @author Aakash Gadhave
 */
public class registrationPanel extends javax.swing.JPanel {

    /**
     * Creates new form registrationPanel
     */
    
    DefaultListModel dm = new DefaultListModel();
    private int validate_all=0;
    public registrationPanel() {
        initComponents();
        load_cities();
        
    }
    public void load_cities(){
        try {
             Connection con = null;
             MyPrisonConnection o = new MyPrisonConnection();
             con = o.getMyConnection();
            //Connect Database Block
            
            Statement st = con.createStatement();
            String s = "select * from countries";
            ResultSet rs = st.executeQuery(s);
            while(rs.next()){
                nationality_txt.addItem(rs.getString("name"));
                
            }
            nationality_txt.setSelectedItem("India");
            state_txt.setSelectedItem("Maharashtra");
            city_text.setSelectedItem("Pune");
        }  catch (SQLException ex) {
            Logger.getLogger(registrationPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
private Under_trial_panel u;
private Convicted_panel   c;
    
    private boolean check_regex(String regex,String inputString){
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(inputString);
        if (matcher.matches()) {
            return true;
        }
        else{
            return false;
        }
    }
      private void add(String name){
         skillsList.setModel(dm);
         
         dm.addElement(name);
         
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        foregroundPanel = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        registration_submit_btn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        fname_text = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        mname_text = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lname_text = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dob_txt = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        state_txt = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        locality_text = new javax.swing.JTextField();
        city_text = new javax.swing.JComboBox<>();
        nationality_txt = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        qualification_text = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        occupation_text = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        skills_text = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        skillsList = new javax.swing.JList<>();
        jLabel16 = new javax.swing.JLabel();
        skillAdd = new javax.swing.JButton();
        skillDelete = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        convictedRadio = new javax.swing.JRadioButton();
        undertrialRadio = new javax.swing.JRadioButton();
        typesPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        foregroundPanel.setBackground(new java.awt.Color(255, 255, 255));
        foregroundPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        foregroundPanel.setForeground(new java.awt.Color(153, 153, 153));
        foregroundPanel.setMinimumSize(new java.awt.Dimension(750, 1271));
        foregroundPanel.setPreferredSize(new java.awt.Dimension(750, 1271));
        foregroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titlePanel.setBackground(new java.awt.Color(204, 255, 255));
        titlePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 28)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Prisoner Registration Form");
        titlePanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 16, -1, 40));

        foregroundPanel.add(titlePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1230, 70));

        registration_submit_btn.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        registration_submit_btn.setText("Submit");
        registration_submit_btn.setEnabled(false);
        registration_submit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registration_submit_btnActionPerformed(evt);
            }
        });
        foregroundPanel.add(registration_submit_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 780, 120, 40));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Personal Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 24))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("First name");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        fname_text.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        fname_text.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        fname_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fname_textFocusLost(evt);
            }
        });
        jPanel2.add(fname_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 170, 30));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Middle name");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        mname_text.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        mname_text.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mname_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                mname_textFocusLost(evt);
            }
        });
        mname_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mname_textActionPerformed(evt);
            }
        });
        jPanel2.add(mname_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 170, 30));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Last name");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        lname_text.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        lname_text.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lname_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lname_textFocusLost(evt);
            }
        });
        jPanel2.add(lname_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 170, 30));

        jLabel6.setBackground(new java.awt.Color(36, 47, 65));
        jLabel6.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Birthdate");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        dob_txt.setDateFormatString("yyyy-MM-dd");
        dob_txt.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        dob_txt.setMinimumSize(new java.awt.Dimension(10, 10));
        dob_txt.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanel2.add(dob_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 170, 30));

        foregroundPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 90, 410, 240));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 24))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        state_txt.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        state_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "           Select", " " }));
        state_txt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                state_txtItemStateChanged(evt);
            }
        });
        jPanel3.add(state_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 170, 30));

        jLabel21.setBackground(new java.awt.Color(36, 47, 65));
        jLabel21.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 51, 51));
        jLabel21.setText("Nationality");
        jPanel3.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 30));

        jLabel26.setBackground(new java.awt.Color(36, 47, 65));
        jLabel26.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(51, 51, 51));
        jLabel26.setText("State");
        jPanel3.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        jLabel12.setBackground(new java.awt.Color(36, 47, 65));
        jLabel12.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("City");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        jLabel25.setBackground(new java.awt.Color(36, 47, 65));
        jLabel25.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(51, 51, 51));
        jLabel25.setText("Locality");
        jPanel3.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        locality_text.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        locality_text.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        locality_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                locality_textFocusLost(evt);
            }
        });
        locality_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locality_textActionPerformed(evt);
            }
        });
        jPanel3.add(locality_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, 170, 30));

        city_text.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        city_text.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "           Select" }));
        jPanel3.add(city_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 170, 30));

        nationality_txt.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        nationality_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "           Select " }));
        nationality_txt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                nationality_txtItemStateChanged(evt);
            }
        });
        jPanel3.add(nationality_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 170, 30));

        foregroundPanel.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 90, 500, 240));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Other Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 24))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        qualification_text.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        qualification_text.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "SSC", "HSC", "Diploma", "Graduate", "Post Graduate", "Bachelor's Degree", "Master's Degree", "Doctorate or higher", "--" }));
        qualification_text.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        qualification_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qualification_textActionPerformed(evt);
            }
        });
        jPanel4.add(qualification_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 170, 30));

        jLabel13.setBackground(new java.awt.Color(36, 47, 65));
        jLabel13.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 51));
        jLabel13.setText("Qualification");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 130, -1));

        occupation_text.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        occupation_text.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        occupation_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                occupation_textFocusLost(evt);
            }
        });
        jPanel4.add(occupation_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 170, 30));

        jLabel7.setBackground(new java.awt.Color(36, 47, 65));
        jLabel7.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Occupation");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        skills_text.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        skills_text.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        skills_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                skills_textFocusLost(evt);
            }
        });
        jPanel4.add(skills_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 170, 30));

        skillsList.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        skillsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                skillsListnone(evt);
            }
        });
        jScrollPane3.setViewportView(skillsList);

        jPanel4.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 170, 100));

        jLabel16.setBackground(new java.awt.Color(36, 47, 65));
        jLabel16.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 51, 51));
        jLabel16.setText("Skills");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 90, 20));

        skillAdd.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        skillAdd.setText("Add");
        skillAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skillAddActionPerformed(evt);
            }
        });
        jPanel4.add(skillAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 80, -1));

        skillDelete.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        skillDelete.setText("Delete");
        skillDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skillDeleteActionPerformed(evt);
            }
        });
        jPanel4.add(skillDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 170, 80, -1));

        foregroundPanel.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 340, 410, 420));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Prisoner Type", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 24))); // NOI18N
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        convictedRadio.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(convictedRadio);
        convictedRadio.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        convictedRadio.setForeground(new java.awt.Color(51, 51, 51));
        convictedRadio.setText("Convicted");
        convictedRadio.setBorder(null);
        convictedRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convictedRadioActionPerformed(evt);
            }
        });
        jPanel5.add(convictedRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, -1, 30));

        undertrialRadio.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(undertrialRadio);
        undertrialRadio.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        undertrialRadio.setForeground(new java.awt.Color(51, 51, 51));
        undertrialRadio.setText("Under Trial");
        undertrialRadio.setBorder(null);
        undertrialRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undertrialRadioActionPerformed(evt);
            }
        });
        jPanel5.add(undertrialRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, -1, -1));

        typesPanel.setBackground(new java.awt.Color(255, 255, 255));
        typesPanel.setLayout(new java.awt.BorderLayout());
        jPanel5.add(typesPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 75, 450, 335));

        foregroundPanel.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 340, 500, 420));

        jPanel1.add(foregroundPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1105, 850));

        jScrollPane1.setViewportView(jPanel1);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void convictedRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convictedRadioActionPerformed
        // TODO add your handling code here:
        typesPanel.removeAll();
        c = new Convicted_panel();
        typesPanel.add(c,BorderLayout.CENTER);
        typesPanel.revalidate();
        typesPanel.repaint();
        registration_submit_btn.setEnabled(true);

    }//GEN-LAST:event_convictedRadioActionPerformed

    private void undertrialRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undertrialRadioActionPerformed
        // TODO add your handling code here:
        typesPanel.removeAll();
        u = new Under_trial_panel();
        typesPanel.add(u,BorderLayout.CENTER);
        typesPanel.revalidate();
        typesPanel.repaint();
        registration_submit_btn.setEnabled(true);
    }//GEN-LAST:event_undertrialRadioActionPerformed

    private void locality_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locality_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locality_textActionPerformed

    private void skillsListnone(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_skillsListnone
        // TODO add your handling code here:
    }//GEN-LAST:event_skillsListnone

    private void skillDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skillDeleteActionPerformed
        // TODO add your handling code here:
        //Get Index,Update
        int index = skillsList.getSelectedIndex();

        dm.removeElementAt(index);
        //Clear Text
        skills_text.setText(null);
    }//GEN-LAST:event_skillDeleteActionPerformed

    private void skillAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skillAddActionPerformed
        // TODO add your handling code here:
        if(skills_text.getText().length()!=0)
        {
            add(skills_text.getText());
            skills_text.setText("");
        }

    }//GEN-LAST:event_skillAddActionPerformed

    private void mname_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mname_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mname_textActionPerformed

    private void qualification_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qualification_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qualification_textActionPerformed

    private void fname_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fname_textFocusLost
        // TODO add your handling code here:
        String regex = "[a-zA-Z]+";

        boolean isValid=check_regex(regex, fname_text.getText());

        if(isValid)
        {
             
           if(fname_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
           fname_text.setBackground(new Color(170, 253, 197));
            fname_text.setBorder(BorderFactory.createLineBorder(Color.GREEN));
        }
        else{
            if(fname_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
             fname_text.setBackground(new Color(188 , 84 ,73));
            fname_text.setBorder(BorderFactory.createLineBorder(Color.RED));
             
        }
    }//GEN-LAST:event_fname_textFocusLost

    private void mname_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mname_textFocusLost
        // TODO add your handling code here:
        String regex = "[a-zA-Z]+";

        boolean isValid=check_regex(regex, mname_text.getText());

        if(isValid)
        {
             
            if(mname_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
            mname_text.setBackground(new Color(170, 253, 197));
        }
        else{
            if(mname_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
            mname_text.setBackground(new Color(255, 186, 187));
             
        }
    }//GEN-LAST:event_mname_textFocusLost

    private void lname_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lname_textFocusLost
        // TODO add your handling code here:
        String regex = "[a-zA-Z]+";

        boolean isValid=check_regex(regex, lname_text.getText());

        if(isValid)
        {
             
            if(lname_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
            lname_text.setBackground(new Color(170, 253, 197));
        }
        else{
            if(lname_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
            lname_text.setBackground(new Color(255, 186, 187));
             
        }
    }//GEN-LAST:event_lname_textFocusLost

    private void occupation_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_occupation_textFocusLost
        // TODO add your handling code here:
        String regex = "[a-zA-Z]+";

        boolean isValid=check_regex(regex, occupation_text.getText());

        if(isValid)
        {
             
            if(occupation_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
            occupation_text.setBackground(new Color(170, 253, 197));
        }
        else{
            if(occupation_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
            occupation_text.setBackground(new Color(255, 186, 187));
             
        }
    }//GEN-LAST:event_occupation_textFocusLost

    private void skills_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_skills_textFocusLost
        // TODO add your handling code here:
        String regex = "[a-zA-Z]+";

        boolean isValid=check_regex(regex, skills_text.getText());

        if(isValid)
        {
             
            if(skills_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
            skills_text.setBackground(new Color(170, 253, 197));
        }
        else{
            if(skills_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
            skills_text.setBackground(new Color(255, 186, 187));
             
        }
    }//GEN-LAST:event_skills_textFocusLost

    private void locality_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_locality_textFocusLost
        // TODO add your handling code here:
        String regex = "[a-zA-Z]+";

        boolean isValid=check_regex(regex, locality_text.getText());

        if(isValid)
        {
             
            if(locality_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
            locality_text.setBackground(new Color(170, 253, 197));
        }
        else{
            if(locality_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
            locality_text.setBackground(new Color(255, 186, 187));
             
        }
    }//GEN-LAST:event_locality_textFocusLost

    private void registration_submit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registration_submit_btnActionPerformed
        // TODO add your handling code here:
        
        Connection con = null;
        MyPrisonConnection o = new MyPrisonConnection();
        con = o.getMyConnection();
        
        String t_idString = null;
        String first_nameString = fname_text.getText();
        String middle_nameString = mname_text.getText();
        String last_nameString = lname_text.getText();
        java.util.Date date= dob_txt.getDate();
      java.sql.Date sqldate = new java.sql.Date(date.getTime());
        
        String nationality = (String)nationality_txt.getSelectedItem();
        String state = (String)state_txt.getSelectedItem();
        String city = (String)city_text.getSelectedItem();
        String locality = locality_text.getText();
        String occupation = occupation_text.getText();
        String qualification = (String)qualification_text.getSelectedItem();
       // Under_trial_panel u = new Under_trial_panel();
        //String cases = u.casestxt.getText();
       // String rem;
      
        
        
         int years = Integer.parseInt(c.yearsTextfield.getText());
         int months = Integer.parseInt(c.monthsTextfield.getText());
         int days = Integer.parseInt(c.daysTextField.getText());
                 
         
        int in_period;
        in_period = ((years * 365) + (months * 30) + days);
        PreparedStatement pst;
        System.out.println(""+convictedRadio.isSelected()+" "+undertrialRadio.isSelected());
                
        try {
            
            
            if (undertrialRadio.isSelected()) {
                
                System.out.println("running");
                pst = con.prepareStatement("INSERT INTO trial_prisoner VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?)");
                
                System.out.println("ro");
                
                pst.setString(1, null);
                pst.setString(2,first_nameString);
                pst.setString(3,middle_nameString);
                pst.setString(4, last_nameString);
                pst.setDate(5, sqldate);
                pst.setString(6,nationality);
                pst.setString(7,state);
                pst.setString(8, city);
                pst.setString(9, locality);
                pst.setString(10, occupation);
                pst.setString(11, qualification);
                pst.setTimestamp(12, new Timestamp(System.currentTimeMillis()));
                pst.setString(13, u.remarks.getText());
                int i = pst.executeUpdate();
                
                 System.out.println("run");
                if(i>0){
                    JOptionPane.showMessageDialog(null, "UnderTrial Prisoner is added successfully");
                }
                else{
                    JOptionPane.showMessageDialog(null,"UnderTrial Prisoner addition is failed");
                }
            }
       
            if (convictedRadio.isSelected())
 {
                System.out.println("run");
                pst = con.prepareStatement("INSERT INTO convicted_prisoner VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                
                      System.out.println("ro");
                pst.setString(1, null);
                pst.setString(2,first_nameString);
                pst.setString(3,middle_nameString);
                pst.setString(4, last_nameString);
                pst.setDate(5, sqldate);
                pst.setString(6,nationality);
                pst.setString(7,state);
                pst.setString(8, city);
                pst.setString(9, locality);
                pst.setString(10, occupation);
                pst.setString(11, qualification);
                pst.setTimestamp(12,new Timestamp(System.currentTimeMillis()));
                pst.setTimestamp(13,new Timestamp(System.currentTimeMillis()));
                pst.setInt(14,in_period);
                
                if(c.simpleRdoBtn.isSelected())
                {
                    System.out.println("simplep");
                    pst.setString(15,"simple");
                }
                if (c.rigorousRdoBtn.isSelected()) {
                    System.out.println("rigorousp");
                    pst.setString(15, "rigorous");
                    
                }
                int i = pst.executeUpdate();
                
                 System.out.println("run");
                if(i>0){
                    JOptionPane.showMessageDialog(null, "Data is saved");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Data is not saved");
                }
            }
            
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null, "Data is wrong : "+ex.toString());
        }
        
         
    }//GEN-LAST:event_registration_submit_btnActionPerformed

    private void nationality_txtItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_nationality_txtItemStateChanged
        // TODO add your handling code here:
        if (nationality_txt.getSelectedItem()!=null) {
               
            try {
                System.out.println("in country");
                   String country=nationality_txt.getSelectedItem().toString();
                Connection con=null;
                MyPrisonConnection o = new MyPrisonConnection();
                con = o.getMyConnection();
             
                
                //Connect Database Block

                Statement st = con.createStatement();
                String s = "select * from states where country_id = (Select id from countries where name='"+country+"');";
                ResultSet rs = st.executeQuery(s);
                state_txt.removeAllItems();
                while(rs.next()){
                    state_txt.addItem(rs.getString("name"));
                    
                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(registrationPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_nationality_txtItemStateChanged

    private void state_txtItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_state_txtItemStateChanged
        // TODO add your handling code here:
        if(state_txt.getSelectedItem() != null){
            try {
                System.out.println("in state");
                String state=state_txt.getSelectedItem().toString();
                
                Connection con=null;
                MyPrisonConnection o = new MyPrisonConnection();
                con = o.getMyConnection();
                
                //Connect Database Block

                Statement st = con.createStatement();
                String s = "select * from cities where state_id = (Select id from states where name='"+state+"');";
                ResultSet rs = st.executeQuery(s);
                city_text.removeAllItems();
                while(rs.next()){
                    city_text.addItem(rs.getString("name"));

                }
            }  catch (SQLException ex) {
                Logger.getLogger(registrationPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_state_txtItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> city_text;
    private javax.swing.JRadioButton convictedRadio;
    private com.toedter.calendar.JDateChooser dob_txt;
    private javax.swing.JTextField fname_text;
    private javax.swing.JPanel foregroundPanel;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField lname_text;
    private javax.swing.JTextField locality_text;
    private javax.swing.JTextField mname_text;
    private javax.swing.JComboBox<String> nationality_txt;
    private javax.swing.JTextField occupation_text;
    private javax.swing.JComboBox<String> qualification_text;
    private javax.swing.JButton registration_submit_btn;
    private javax.swing.JButton skillAdd;
    private javax.swing.JButton skillDelete;
    private javax.swing.JList<String> skillsList;
    private javax.swing.JTextField skills_text;
    private javax.swing.JComboBox<String> state_txt;
    private javax.swing.JPanel titlePanel;
    private javax.swing.JPanel typesPanel;
    private javax.swing.JRadioButton undertrialRadio;
    // End of variables declaration//GEN-END:variables
}
